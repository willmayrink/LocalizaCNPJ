/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rjoliveira.localizacnpj.view;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.*;
import java.text.SimpleDateFormat;
import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.rjoliveira.localizacnpj.model.Empresa;
import com.rjoliveira.localizacnpj.service.EmpresaFetcher;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author laura
 */
public class Main extends javax.swing.JFrame {

    DefaultTableModel tblModel = new DefaultTableModel(new Object[]{"Nome", "CEP", "Logradouro", "Data Abertura", "Situação cadastral"}, 0);
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Main.class.getName());

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        try {
            MaskFormatter cnpjMask = new MaskFormatter("##.###.###/####-##");
            txtCNPJ.setValue(null);
            txtCNPJ.setFormatterFactory(new DefaultFormatterFactory(cnpjMask));

        } catch (Exception e) {
            e.printStackTrace();
        }
        setCustomIcon();

    }

    public void setCustomIcon() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/icons/escritorio.png"));
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDados = new javax.swing.JTable();
        btnLimpar = new javax.swing.JButton();
        txtCNPJ = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consulta CNPJ");

        btnPesquisar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/verify.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblDados.setFont(new java.awt.Font("Calibri", 1, 10)); // NOI18N
        tblDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDados.setEnabled(false);
        tblDados.setFocusable(false);
        jScrollPane1.setViewportView(tblDados);

        btnLimpar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/trash-can.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        txtCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCNPJActionPerformed(evt);
            }
        });

        jLabel1.setText("CNPJ:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(213, 213, 213)
                        .addComponent(btnPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        String dadosCNPJ = "";
        try {
            System.out.println("O tamanho da string é: " + txtCNPJ.getText().length());
            if (txtCNPJ.getText().length() != 18) {
                JOptionPane.showMessageDialog(null, "Confira o CNPJ e tente novamente!");
                txtCNPJ.setText("");
            } else {
                dadosCNPJ = txtCNPJ.getText().replaceAll("[^a-zA-Z0-9\\s]", "");
                pesquisarCNPJ(dadosCNPJ);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro na pesquisa do CNPJ. \n" + e);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        tblModel.setRowCount(0);
        txtCNPJ.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCNPJActionPerformed
        String dadosCNPJ = "";
        try {
            System.out.println("O tamanho da string é: " + txtCNPJ.getText().length());
            if (txtCNPJ.getText().length() != 18) {
                JOptionPane.showMessageDialog(null, "Confira o CNPJ e tente novamente!");
                txtCNPJ.setText("");
            } else {
                dadosCNPJ = txtCNPJ.getText().replaceAll("[^a-zA-Z0-9\\s]", "");
                pesquisarCNPJ(dadosCNPJ);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro na pesquisa do CNPJ. \n" + e);
        }
    }//GEN-LAST:event_txtCNPJActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatDarkLaf.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Main().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDados;
    private javax.swing.JFormattedTextField txtCNPJ;
    // End of variables declaration//GEN-END:variables

    public void pesquisarCNPJ(String cnpj) {
        try {
            // Certifique-se de que a tabela está inicializada com o modelo
            if (tblDados.getModel() != tblModel) {
                tblDados.setModel(tblModel); // Associa o modelo à tabela, se ainda não estiver
            }

            EmpresaFetcher dataFetcher = new EmpresaFetcher();

            Empresa emp = dataFetcher.fetchData(cnpj);
            SimpleDateFormat dtFormat = new SimpleDateFormat("dd/MM/yyyy");
            String dataFormatada = dtFormat.format(emp.getDataAbertura());
            System.out.println("Os dados são: " + emp.getRazaoSocial() + " " + emp.getCep());

            // Dados da linha
            Object[] rowData = {
                emp.getRazaoSocial(),
                emp.getCep(),
                emp.getTipoLogradouro() + " " + emp.getLogradouro() + " - " + emp.getNumero(),
                dataFormatada,
                emp.getSituacaoCadastral() // Passa a situação cadastral diretamente
            };

            // Adiciona a linha ao modelo
            tblModel.addRow(rowData);

            // Configura o renderizador para a coluna "Situação Cadastral" (índice 4)
            tblDados.getColumnModel().getColumn(4).setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                    // Verifica se o valor é "Ativa"
                    if (value != null && value.toString().equalsIgnoreCase("Ativa")) {
                        // Carrega o ícone de check
                        ImageIcon checkIcon = new ImageIcon(getClass().getResource("/icons/verify.png"));
                        // Redimensiona o ícone, se necessário
                        Image img = checkIcon.getImage().getScaledInstance(12, 12, Image.SCALE_SMOOTH);
                        checkIcon = new ImageIcon(img);

                        // Define o texto e o ícone
                        label.setText("Ativa");
                        label.setIcon(checkIcon);
                        label.setHorizontalTextPosition(SwingConstants.LEFT); // Ícone à direita do texto
                    } else {
                        // Caso não seja "Ativa", exibe apenas o texto
                        label.setText(value != null ? value.toString() : "");
                        label.setIcon(null);
                    }

                    return label;
                }
            });

            txtCNPJ.setText("");
        } catch (Exception e) {
            e.printStackTrace(); // Loga a exceção para depuração
            JOptionPane.showMessageDialog(null, "Erro ao consultar CNPJ: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
}
